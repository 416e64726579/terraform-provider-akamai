<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.akamai.fee</groupId>
  <artifactId>terraform-provider-akamai</artifactId>
  <packaging>mvn-golang</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>terraform provider plugin</name>

  <!--Required to to able to build/test in Akamai internal build system -->
  <parent>
    <groupId>com.akamai</groupId>
    <artifactId>luna</artifactId>
    <version>1.7</version>
  </parent>

  <properties>
    <!-- temporarily ignore JavaDoc errors - not a java project -->
    <doclint>none</doclint>

    <!-- global properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <sonar.tests>test</sonar.tests>

    <!-- plugins -->
    <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-cobertura-plugin.version>2.7</maven-cobertura-plugin.version>
    <mvn-golang-wrapper-plugin.version>2.3.4</mvn-golang-wrapper-plugin.version>
    <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
    <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
    <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
    <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>

  </properties>

  <repositories>
    <repository>
      <id>primary-akamai-nexus</id>
      <url>https://lunabuild.akamai.com/nexus/content/groups/public/</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <build>
    <!--Changing standard Maven project source structure to make it Go compatible-->
    <sourceDirectory>${basedir}${file.separator}</sourceDirectory>
    <directory>${basedir}${file.separator}dist</directory>
    <finalName>sample-output-binary</finalName>
    <plugins>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>mvn-golang-wrapper</artifactId>
        <version>${mvn-golang-wrapper-plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>install</goal>
            </goals>
            <configuration>
              <moduleMode>true</moduleMode>
              <packages>
                <package>main.go</package>
                <package>pkg</package>
                <package>github.com/akamai/AkamaiOPEN-edgegrid-golang</package>
              </packages>
            </configuration>
          </execution>
        </executions>
      </plugin>
 
      <!-- Generate lastgitcommit information -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>${buildnumber-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <buildNumberPropertyName>lastgitcommit</buildNumberPropertyName>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <revisionOnScmFailure>unknown</revisionOnScmFailure>
        </configuration>
      </plugin>
      <!-- Generate a build.properties file -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>${properties-maven-plugin.version}</version>
        <configuration>
          <outputFile>dist/build.properties</outputFile>
        </configuration>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
